#-----------------------------------------------------------------#
# SISTEMA.: CONTAS A RECEBER                                      #
# PROGRAMA: POL1377                                               #
# OBJETIVO: IMPRESSAO DE BOLETOS A LASER                          #
# AUTOR...: ANDREI DAGOBERTO STREIT                               #
# DATA....: 24/10/2003                                            #
#-----------------------------------------------------------------#

DATABASE logix

GLOBALS
   DEFINE p_cod_empresa          LIKE empresa.cod_empresa,
          p_den_empresa          LIKE empresa.den_empresa,
          p_user                 LIKE usuario.nom_usuario,
          p_status               SMALLINT,
          p_ies_impressao        CHAR(001),
          g_ies_ambiente         CHAR(001),
          p_nom_arquivo          CHAR(100),
          p_versao               CHAR(18),
          comando                CHAR(080),
          m_comando              CHAR(080),
          p_caminho              CHAR(150),
          m_caminho              CHAR(150),
          g_tipo_sgbd            CHAR(003),
          g_tem_critica          SMALLINT,
          g_msg                  CHAR(150),
          p_nom_tela             CHAR(200)      
END GLOBALS

DEFINE m_execucao                CHAR(01)

MAIN
   CALL log0180_conecta_usuario()
   WHENEVER ANY ERROR CONTINUE
   SET ISOLATION TO DIRTY READ
   SET LOCK MODE TO WAIT 120

   IF NUM_ARGS() > 0  THEN
      LET p_cod_empresa = ARG_VAL(1)
      LET m_execucao = 'B'   
   ELSE
      CALL log001_acessa_usuario("ESPEC999","")     
          RETURNING p_status, p_cod_empresa, p_user
      LET m_execucao = 'M'   
   END IF

   CALL pol1378_exibe_tela()
   CALL pol1378_processa() RETURNING p_status
   CLOSE WINDOW w_pol1378
    
END MAIN

#------------------------------#
FUNCTION pol1378_job(l_rotina) #
#------------------------------#

   DEFINE l_rotina          CHAR(06),
          l_den_empresa     CHAR(50),
          l_param1_empresa  CHAR(02),
          l_param2_user     CHAR(08),
          l_param3_user     CHAR(08),
          l_status          SMALLINT

   CALL JOB_get_parametro_gatilho_tarefa(1,0) RETURNING l_status, l_param1_empresa
   CALL JOB_get_parametro_gatilho_tarefa(2,0) RETURNING l_status, l_param2_user
   CALL JOB_get_parametro_gatilho_tarefa(2,2) RETURNING l_status, l_param3_user
   
   LET p_cod_empresa = l_param1_empresa
   LET p_user = l_param2_user
      
   LET m_execucao = 'A'
   CALL pol1378_exibe_tela()
   CALL pol1378_processa() RETURNING p_status
   CLOSE WINDOW w_pol1378
   RETURN p_status
   
END FUNCTION   

#----------------------------#
FUNCTION pol1378_exibe_tela()#
#----------------------------#

   CALL log006_exibe_teclas("01",p_versao)
   INITIALIZE p_nom_tela TO NULL 
   CALL log130_procura_caminho("pol1378") RETURNING p_nom_tela
   LET p_nom_tela = p_nom_tela CLIPPED 
   OPEN WINDOW w_pol1378 AT 2,2 WITH FORM p_nom_tela
        ATTRIBUTE(BORDER, MESSAGE LINE LAST, PROMPT LINE LAST)
   
   DISPLAY p_cod_empresa TO cod_empresa
   CALL LOG_refresh_display()

END FUNCTION

#--------------------------#
FUNCTION pol1378_processa()#
#--------------------------#

   IF p_cod_empresa IS NULL THEN
      LET p_cod_empresa = '01'
   END IF

   IF p_user IS NULL THEN
      LET p_user = 'admlog'
   END IF

   LET p_versao = "pol1378-12.00.00  "
   CALL func002_versao_prg(p_versao)

   LET g_tipo_sgbd = LOG_getCurrentDBType()

   IF NOT log0150_verifica_se_tabela_existe("control_proces_pol1378") THEN 
      IF NOT pol1378_cria_controle() THEN
         RETURN FALSE
      END IF
   END IF

   IF NOT pol1378_check_proces()THEN
      RETURN FALSE
   END IF

   CALL pol1378_exec_carga() RETURNING p_status

   UPDATE control_proces_pol1378
      SET ies_processando = 'N',
          qtd_tentativa = 0
    WHERE id_proces = 1    
      
   RETURN p_status
   
END FUNCTION

#-------------------------------#
FUNCTION pol1378_cria_controle()#
#-------------------------------#

   CREATE TABLE control_proces_pol1378 (
      id_proces            INTEGER,
      ies_processando      char(01),
      qtd_tentativa        INTEGER
   );

   IF STATUS <> 0 THEN
      DROP TABLE control_proces_pol1378
      RETURN FALSE
   END IF

   CREATE UNIQUE INDEX ix_proces_pol1378
    ON control_proces_pol1378(id_proces);

   IF STATUS <> 0 THEN
      DROP TABLE control_proces_pol1378
      RETURN FALSE
   END IF
   
   INSERT INTO control_proces_pol1378 VALUES(1,'N',0)

   IF STATUS <> 0 THEN
      DROP TABLE control_proces_pol1378
      RETURN FALSE
   END IF

   RETURN TRUE      
   
END FUNCTION

#------------------------------#
FUNCTION pol1378_check_proces()#
#------------------------------#
   
   DEFINE l_ies_processando  CHAR(01),
          l_qtd_tentativa    INTEGER
          
   SELECT ies_processando,
          qtd_tentativa
     INTO l_ies_processando,
          l_qtd_tentativa
     FROM control_proces_pol1378
    WHERE id_proces = 1

   IF STATUS <> 0 THEN
      RETURN FALSE
   END IF

   IF l_ies_processando = 'N' THEN
      UPDATE control_proces_pol1378
         SET ies_processando = 'S',
             qtd_tentativa = 0
       WHERE id_proces = 1    

      IF STATUS <> 0 THEN
         RETURN FALSE
      END IF
     
      RETURN TRUE
   END IF
   
   IF l_qtd_tentativa < 10 THEN
      UPDATE control_proces_pol1378
         SET qtd_tentativa = qtd_tentativa + 1
       WHERE id_proces = 1    

      RETURN FALSE
   
   END IF
         
   RETURN TRUE   

END FUNCTION   

#----------------------------#         
FUNCTION pol1378_exec_carga()#
#----------------------------#
   
   CALL log0030_mensagem(g_tipo_sgbd,'info')

END FUNCTION
