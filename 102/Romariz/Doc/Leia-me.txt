Sr Will

Segue um programa de cadastro, para você desenvolver.

- salve o arquivo tabela.sql na pasta c:\Informix
- execute o atalho ol_logix
- entre no dbaccess (dbaccess logix)
- escolha os comandos Query-language depois Choose
- selecione o arquivo tabela.sql
- execute o comando Run, para criar as tabelas
- escolha o comando Choose
- selecione o arquivo esquema.sql
- execute o comando Run, para criar o arquivo logix.sch
- copie o arquivo logix.sch para a pasta c:\??????
- abra o IDE
- crie um projeto de nome pol1111
- compile o projeto
- entre no Logix execute o men0050, escolha Niveis e cadastre
  os programas pol1111 e pol1120
- execute o men0060 e dê autorização, para usar os programas
- saia do Logix
- de volta ao IDE, execute o pol1111 e cadastre dois tipos de
  análises, sendo primeiro com o campo Por validade = N e o 
  segundo com o campo Por validade = S
- crie um novo projeto e salve com o nome de pol1120
- compila e executa o pol1120. você verá que a tela será aberta
  más nenhuma opção funcionará, pois só desenvolvi até o menu.
  Comentei o prgrama da inclusão para baixo. Tire a { de comentário
  e continui o desenvolvimento.
  
Obs:

- Na tela de entrada de dados você perceberá alguns popup:

  .Família - use a log009, conforme abaixo:

      WHEN INFIELD(cod_familia)
         
         CALL log009_popup(8,25,"FAMILIAS","empresa",
                     "cod_familia","den_familia","","S","") 
            RETURNING p_codigo
         CALL log006_exibe_teclas("01 02 03 07", p_versao)
         CURRENT WINDOW IS w_pol1120
         
         IF p_codigo IS NOT NULL THEN
            LET p_analise.cod_familia = p_codigo CLIPPED
            DISPLAY p_codigo TO cod_familia
         END IF
  
  .Item - use o bloco de código abaixo:

      WHEN INFIELD(cod_item)
         LET p_codigo = min071_popup_item(p_cod_empresa)
         CALL log006_exibe_teclas("01 02 03 07", p_versao)
         CURRENT WINDOW IS w_pol1120
         IF p_codigo IS NOT NULL THEN
           LET p_analise.cod_item = p_codigo
           DISPLAY p_codigo TO cod_item
         END IF
  
   

  . Tipo de análise
    Você deverá desenvolver um popup especial, para exibir
    somente os tipos com ies_validade = 'S'
    Veja o popup do pol1069 que você mesmo fez:

   #-----------------------#
    FUNCTION pol1069_popup()
   #-----------------------#

   DEFINE p_codigo CHAR(15)

     CASE
        WHEN INFIELD(cod_banco)
           LET p_codigo = pol1069_le_bancos()
           IF p_codigo IS NOT NULL THEN
             LET p_cod_banco = p_codigo
             DISPLAY p_codigo TO cod_banco
           END IF
    
     END CASE
   
   END FUNCTION 

  #---------------------------#
   FUNCTION pol1069_le_bancos()
  #---------------------------#

   DEFINE pr_bancos  ARRAY[2000] OF RECORD
          cod_banco  LIKE banco_265.cod_banco,
          nom_banco  LIKE bancos.nom_banco
   END RECORD
   
   INITIALIZE p_nom_tela TO NULL
   CALL log130_procura_caminho("pol10691") RETURNING p_nom_tela
   LET p_nom_tela = p_nom_tela CLIPPED
   OPEN WINDOW w_pol10691 AT 5,16 WITH FORM p_nom_tela
      ATTRIBUTE(BORDER, MESSAGE LINE LAST, PROMPT LINE LAST, FORM LINE FIRST)

   LET INT_FLAG = FALSE
   LET p_ind = 1
    
   DECLARE cq_bancos CURSOR FOR
   
    SELECT cod_banco
      FROM banco_265
     ORDER BY cod_banco

   FOREACH cq_bancos
      INTO pr_bancos[p_ind].cod_banco   

      IF STATUS <> 0 THEN
         CALL log003_err_sql('Lendo','cursor: cq_bancos')
         EXIT FOREACH
      END IF
      
      SELECT nom_banco
        INTO pr_bancos[p_ind].nom_banco
        FROM bancos
       WHERE cod_banco = pr_bancos[p_ind].cod_banco
      
      IF STATUS <> 0 THEN
         CALL log003_err_sql('Lendo','bancos')
         EXIT FOREACH
      END IF
       
      LET p_ind = p_ind + 1
      
      IF p_ind > 2000 THEN
         LET p_msg = 'Limite de grade ultrapassado !!!'
         CALL log0030_mensagem(p_msg,'exclamation')
         EXIT FOREACH
      END IF
           
   END FOREACH
      
   CALL SET_COUNT(p_ind - 1)
   
   DISPLAY ARRAY pr_bancos TO sr_bancos.*

      LET p_ind = ARR_CURR()
      LET s_ind = SCR_LINE() 
      
   CLOSE WINDOW w_pol10691
   
   IF NOT INT_FLAG THEN
      RETURN pr_bancos[p_ind].cod_banco
   ELSE
      RETURN ""
   END IF
   
  END FUNCTION

   
   